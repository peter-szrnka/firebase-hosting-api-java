name: Publish package to the Maven Central Repository
on:
  workflow_dispatch:
    inputs:
      releaseVersion:
        description: "Default version to use when preparing a release."
        required: true
        default: "X.Y"
      developmentVersion:
        description: "Default version to use for new local working copy."
        required: true
        default: "X.Y-SNAPSHOT"
permissions:
  contents: write
jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT }}
          ref: main
        env:
          branch: main
          working_directory: ./code/
      - id: install-secret-key 
        name: Install gpg secret key 
        run: | 
          # Install gpg secret key 
          cat <(echo -e "${{ secrets.GPG_SIGNING_KEY }}") | gpg --batch --import 
          # Verify gpg secret key 
          gpg --list-secret-keys --keyid-format LONG
      - name: Set up Maven Central Repository
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          server-id: sonatype
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
      - name: Update pom.xml to releaseVersion
        run: mvn -B versions:set -DnewVersion=${{ github.event.inputs.releaseVersion }} -DgenerateBackupPoms=false -f ./code/pom.xml
      - name: Commit version change
        run: |
          git config --global user.name ${{ secrets.GH_USERNAME }}
          git config --global user.email ${{ secrets.GH_EMAIL }}
          git commit -am "Version updated to ${{ github.event.inputs.releaseVersion }}"
          # git push
      - name: Publish package
        run: mvn -Prelease --batch-mode -Dgpg.passphrase=${{ secrets.GPG_PASSPHRASE }} deploy -f ./code/pom.xml
        env:
          MAVEN_USERNAME:  ${{ secrets.SONATYPE_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          # MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          # MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
      - name: Update pom.xml to developmentVersion
        run: mvn -B versions:set -DnewVersion=${{ github.event.inputs.developmentVersion }} -DgenerateBackupPoms=false -f ./code/pom.xml
      - name: Commit version change to next SNAPSHOT version
        run: |
          git config --global user.name ${{ secrets.GH_USERNAME }}
          git config --global user.email ${{ secrets.GH_EMAIL }}
          git commit -am "Version updated to ${{ github.event.inputs.developmentVersion }}"
          git push
